load("RegularizedLogisticRegression.rda")
#run the app
runApp("Popularity_PredictorExplorer")
library(ggplot2)
library(shiny)
library(corrplot)
library(tidyverse)
library(stargazer)
library(caret)
library(dplyr)
library(shinyWidgets)
library(DT)
#set working directory
setwd("D:/1st Qtr Study Material/R/Final/HTandon/Spotify/")
#data cleaning ---------------------------------------------------------------------------------
#timeSignature is in date format, which needs to be in x/4 format
data$time_signature
levels(data$time_signature)
levels(data$time_signature) = c("0/4", "1/4", "3/4", "4/4", "5/4")
data$time_signature
library(gridExtra)
#column name genre reads differently in mac and windows
#the following code changes column Genre to "genre" if it was read incorrectly
if(colnames(data)[1] != "genre") {
colnames(data)[1] = "genre"
}
#convert attributes like mode, key and timeSignature for machine learning
levels(data$mode)
levels(data$mode) = c(1,0)
#read Dataset
data = read.csv("SpotifyFeatures.csv")
levels(data$mode)
levels(data$key) = c(1:12)
levels(data$key)
levels(data$key)
levels(data$time_signature)
levels(data$time_signature) = c(1:5)
levels(data$time_signature)
#subset only numeric features from the data to run our model
numericFeatures = data[ ,5:ncol(data)]
#convert to numeric
numericFeatures$key = as.numeric(numericFeatures$key)
numericFeatures$mode = as.numeric(numericFeatures$mode)
View(data)
library(ggplot2)
library(shiny)
library(corrplot)
library(tidyverse)
library(stargazer)
library(ggplot2)
library(shiny)
library(corrplot)
library(tidyverse)
library(stargazer)
library(caret)
library(dplyr)
library(gridExtra)
library(shinyWidgets)
library(DT)
#set working directory
setwd("D:/1st Qtr Study Material/R/Final/HTandon/Spotify/")
#read Dataset
data = read.csv("SpotifyFeatures.csv")
#data cleaning ---------------------------------------------------------------------------------
#timeSignature is in date format, which needs to be in x/4 format
data$time_signature
levels(data$time_signature)
levels(data$time_signature) = c("0/4", "1/4", "3/4", "4/4", "5/4")
data$time_signature
#column name genre reads differently in mac and windows
#the following code changes column Genre to "genre" if it was read incorrectly
if(colnames(data)[1] != "genre") {
colnames(data)[1] = "genre"
}
#convert attributes like mode, key and timeSignature for machine learning
levels(data$mode)
levels(data$mode) = c(1,0)
levels(data$mode)
levels(data$key)
levels(data$key) = c(1:12)
levels(data$key)
levels(data$time_signature)
levels(data$time_signature) = c(1:5)
levels(data$time_signature)
#subset only numeric features from the data to run our model
numericFeatures = data[ ,5:ncol(data)]
#convert to numeric
numericFeatures$key = as.numeric(numericFeatures$key)
numericFeatures$mode = as.numeric(numericFeatures$mode)
numericFeatures$time_signature = as.numeric(numericFeatures$time_signature)
numericFeatures = numericFeatures[,-5]
#load our trained machine learning model for prediction
load("RegularizedLogisticRegression.rda")
#run the app
runApp("Popularity_PredictorExplorer")
#read Dataset
data = read.csv("SpotifyFeatures.csv")
View(data)
colnames(data)
>?train
?train
#data cleaning
#timeSignature is in date format, which needs to be in x/4 format
data$time_signature
levels(data$time_signature)
levels(data$time_signature) = c("0/4", "1/4", "3/4", "4/4", "5/4")
data$time_signature
levels(data$mode)
levels(data$mode) = c(1,0)
levels(data$mode)
levels(data$key)
levels(data$key) = c(1:12)
levels(data$key)
levels(data$time_signature)
levels(data$time_signature) = c(1:5)
levels(data$time_signature)
#finding correlation
numericFeatures = data[ ,5:ncol(data)]
#convert to numeric
numericFeatures$key = as.numeric(numericFeatures$key)
numericFeatures$mode = as.numeric(numericFeatures$mode)
numericFeatures$time_signature = as.numeric(numericFeatures$time_signature)
numericFeatures = numericFeatures[,-5]
LRB <- train(popularity ~ .,  data = numericFeatures,
method = 'LogitBoost',
preProc = c("center", "scale"))
library(caret)
LRB <- train(popularity ~ .,  data = numericFeatures,
method = 'LogitBoost',
preProc = c("center", "scale"))
?nIter
?nIter::LogitBoost
?LogitBoost::nIter
?LogitBoost
LRB <- train(popularity ~ .,  data = numericFeatures,
method = 'LogitBoost',
nIter = ncol(numericFeatures))
LR <- train(popularity ~ .,  data = numericFeatures,
method = 'lm',
preProc = c("center", "scale"))
save(LR , file = 'LinearRegressionModel.rda')
train <- sample(nrow(numericFeatures), 0.7*nrow(numericFeatures), replace = FALSE)
TrainSet <- numericFeatures[train,]
ValidSet <- numericFeatures[-train,]
View(numericFeatures)
x_test <- ValidSet[,2:ncol(ValidSet)]
y_test <- ValidSet[,1]
predictions <- predict(LR, x_test)
#Create a confusion matrix to calculate accuracy of our model
confusionMatrix(predictions, y_test)
#Create a confusion matrix to calculate accuracy of our model
confusionMatrix(predictions$class, y_test)
predictions
#Create a confusion matrix to calculate accuracy of our model
confusionMatrix(predictions, y_test)
as.numeric(predictions)
predictions = as.numeric(predictions)
#Create a confusion matrix to calculate accuracy of our model
confusionMatrix(predictions, y_test)
#Create a confusion matrix to calculate accuracy of our model
confusionMatrix(predictions, as.factor(y_test))
predictions = as.integer(predictions)
#Create a confusion matrix to calculate accuracy of our model
confusionMatrix(predictions, y_test)
predictions <- predict(LR, x_test)
predictions = as.integer(predictions)
#Create a confusion matrix to calculate accuracy of our model
confusionMatrix(predictions, y_test)
predictions = as.factor(predictions)
y_test  = as.factor(y_test)
#Create a confusion matrix to calculate accuracy of our model
confusionMatrix(predictions, y_test)
x_test <- ValidSet[,2:ncol(ValidSet)]
y_test <- ValidSet[,1]
predictions <- predict(LR, x_test)
predictions = as.integer(predictions)
#-------------------------------------------------
#  title: Spotify Popularity Predictor and Explorer
#  authors: Adarsh Salapaka, Harsh Tandon, Wenping (Fiona) Du, Xiyu Wu, Xiaoyu Guo
#--------------------------------------------------
#Lets install packages if not already present, and load the following libraries
#install.packages("stargazer")
#install.packages("DT")
#install.packages("shinyWidgets")
#install.packages("ggplot2")
library(ggplot2)
library(shiny)
library(corrplot)
library(tidyverse)
library(stargazer)
library(caret)
library(dplyr)
library(gridExtra)
library(shinyWidgets)
library(DT)
#set working directory
setwd("D:/1st Qtr Study Material/R/Final/HTandon/Spotify/")
#read Dataset
data = read.csv("SpotifyFeatures.csv")
#data cleaning ---------------------------------------------------------------------------------
#timeSignature is in date format, which needs to be in x/4 format
data$time_signature
levels(data$time_signature)
levels(data$time_signature) = c("0/4", "1/4", "3/4", "4/4", "5/4")
data$time_signature
#column name genre reads differently in mac and windows
#the following code changes column Genre to "genre" if it was read incorrectly
if(colnames(data)[1] != "genre") {
colnames(data)[1] = "genre"
}
#convert attributes like mode, key and timeSignature for machine learning
levels(data$mode)
levels(data$mode) = c(1,0)
levels(data$mode)
levels(data$key)
levels(data$key) = c(1:12)
levels(data$key)
levels(data$time_signature)
levels(data$time_signature) = c(1:5)
levels(data$time_signature)
#subset only numeric features from the data to run our model
numericFeatures = data[ ,5:ncol(data)]
#convert to numeric
numericFeatures$key = as.numeric(numericFeatures$key)
numericFeatures$mode = as.numeric(numericFeatures$mode)
numericFeatures$time_signature = as.numeric(numericFeatures$time_signature)
numericFeatures = numericFeatures[,-5]
#-------------------------------------------------------------------------------------------------
#load our trained machine learning model for prediction
load("LinearRegressionModel.rda")
#run the app
runApp("Popularity_PredictorExplorer")
#-------------------------------------------------
#  title: Spotify Popularity Predictor and Explorer
#  authors: Adarsh Salapaka, Harsh Tandon, Wenping (Fiona) Du, Xiyu Wu, Xiaoyu Guo
#--------------------------------------------------
#Lets install packages if not already present, and load the following libraries
#install.packages("stargazer")
#install.packages("DT")
#install.packages("shinyWidgets")
#install.packages("ggplot2")
library(ggplot2)
library(shiny)
library(corrplot)
library(tidyverse)
library(stargazer)
library(caret)
library(dplyr)
library(gridExtra)
library(shinyWidgets)
library(DT)
#set working directory
setwd("D:/1st Qtr Study Material/R/Final/HTandon/Spotify/")
#read Dataset
data = read.csv("SpotifyFeatures.csv")
#data cleaning ---------------------------------------------------------------------------------
#timeSignature is in date format, which needs to be in x/4 format
data$time_signature
levels(data$time_signature)
levels(data$time_signature) = c("0/4", "1/4", "3/4", "4/4", "5/4")
data$time_signature
#column name genre reads differently in mac and windows
#the following code changes column Genre to "genre" if it was read incorrectly
if(colnames(data)[1] != "genre") {
colnames(data)[1] = "genre"
}
#convert attributes like mode, key and timeSignature for machine learning
levels(data$mode)
levels(data$mode) = c(1,0)
levels(data$mode)
levels(data$key)
levels(data$key) = c(1:12)
levels(data$key)
levels(data$time_signature)
levels(data$time_signature) = c(1:5)
levels(data$time_signature)
#subset only numeric features from the data to run our model
numericFeatures = data[ ,5:ncol(data)]
#convert to numeric
numericFeatures$key = as.numeric(numericFeatures$key)
numericFeatures$mode = as.numeric(numericFeatures$mode)
numericFeatures$time_signature = as.numeric(numericFeatures$time_signature)
numericFeatures = numericFeatures[,-5]
#-------------------------------------------------------------------------------------------------
#load our trained machine learning model for prediction
load("LinearRegressionModel.rda")
#run the app
runApp("Popularity_PredictorExplorer")
#run the app
runApp("Popularity_PredictorExplorer")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("stargazer")
#install.packages("DT")
#install.packages("shinyWidgets")
#install.packages("ggplot2")
library(ggplot2)
library(shiny)
library(corrplot)
library(tidyverse)
library(stargazer)
library(caret)
library(dplyr)
library(gridExtra)
library(shinyWidgets)
library(DT)
#set working directory
setwd("D:/1st Qtr Study Material/R/Final/HTandon/Spotify/")
#read Dataset
data = read.csv("SpotifyFeatures.csv")
#timeSignature is in date format, which needs to be in x/4 format
data$time_signature
levels(data$time_signature)
levels(data$time_signature) = c("0/4", "1/4", "3/4", "4/4", "5/4")
data$time_signature
#column name genre reads differently in mac and windows
#the following code changes column Genre to "genre" if it was read incorrectly
if(colnames(data)[1] != "genre") {
colnames(data)[1] = "genre"
}
#convert attributes like mode, key and timeSignature for machine learning
levels(data$mode)
levels(data$mode) = c(1,0)
levels(data$mode)
levels(data$key)
levels(data$key) = c(1:12)
levels(data$key)
levels(data$time_signature)
levels(data$time_signature) = c(1:5)
levels(data$time_signature)
#subset only numeric features from the data to run our model
numericFeatures = data[ ,5:ncol(data)]
#convert to numeric
numericFeatures$key = as.numeric(numericFeatures$key)
numericFeatures$mode = as.numeric(numericFeatures$mode)
numericFeatures$time_signature = as.numeric(numericFeatures$time_signature)
numericFeatures = numericFeatures[,-5]
#load our trained machine learning model for prediction
load("LinearRegressionModel.rda")
#run the app
runApp("Popularity_PredictorExplorer")
#run the app
runApp("Popularity_PredictorExplorer")
#-------------------------------------------------
#  title: Spotify Popularity Predictor and Explorer
#  authors: Adarsh Salapaka, Harsh Tandon, Wenping (Fiona) Du, Xiyu Wu, Xiaoyu Guo
#--------------------------------------------------
#Lets install packages if not already present, and load the following libraries
#install.packages("stargazer")
#install.packages("DT")
#install.packages("shinyWidgets")
#install.packages("ggplot2")
library(ggplot2)
library(shiny)
library(corrplot)
library(tidyverse)
library(stargazer)
library(caret)
library(dplyr)
library(gridExtra)
library(shinyWidgets)
library(DT)
#set working directory
setwd("D:/1st Qtr Study Material/R/Final/HTandon/Spotify/")
#read Dataset
data = read.csv("SpotifyFeatures.csv")
#data cleaning ---------------------------------------------------------------------------------
#timeSignature is in date format, which needs to be in x/4 format
data$time_signature
levels(data$time_signature)
levels(data$time_signature) = c("0/4", "1/4", "3/4", "4/4", "5/4")
data$time_signature
#column name genre reads differently in mac and windows
#the following code changes column Genre to "genre" if it was read incorrectly
if(colnames(data)[1] != "genre") {
colnames(data)[1] = "genre"
}
#convert attributes like mode, key and timeSignature for machine learning
levels(data$mode)
levels(data$mode) = c(1,0)
levels(data$mode)
levels(data$key)
levels(data$key) = c(1:12)
levels(data$key)
levels(data$time_signature)
levels(data$time_signature) = c(1:5)
levels(data$time_signature)
#subset only numeric features from the data to run our model
numericFeatures = data[ ,5:ncol(data)]
#convert to numeric
numericFeatures$key = as.numeric(numericFeatures$key)
numericFeatures$mode = as.numeric(numericFeatures$mode)
numericFeatures$time_signature = as.numeric(numericFeatures$time_signature)
numericFeatures = numericFeatures[,-5]
#-------------------------------------------------------------------------------------------------
#load our trained machine learning model for prediction
load("LinearRegressionModel.rda")
#run the app
runApp("Popularity_PredictorExplorer")
#-------------------------------------------------
#  title: Spotify Popularity Predictor and Explorer
#  authors: Adarsh Salapaka, Harsh Tandon, Wenping (Fiona) Du, Xiyu Wu, Xiaoyu Guo
#--------------------------------------------------
#Lets install packages if not already present, and load the following libraries
#install.packages("stargazer")
#install.packages("DT")
#install.packages("shinyWidgets")
#install.packages("ggplot2")
library(ggplot2)
library(shiny)
library(corrplot)
library(tidyverse)
library(stargazer)
library(caret)
library(dplyr)
library(gridExtra)
library(shinyWidgets)
library(DT)
#set working directory
setwd("D:/1st Qtr Study Material/R/Final/HTandon/Spotify/")
#read Dataset
data = read.csv("SpotifyFeatures.csv")
#data cleaning ---------------------------------------------------------------------------------
#timeSignature is in date format, which needs to be in x/4 format
data$time_signature
levels(data$time_signature)
levels(data$time_signature) = c("0/4", "1/4", "3/4", "4/4", "5/4")
data$time_signature
#column name genre reads differently in mac and windows
#the following code changes column Genre to "genre" if it was read incorrectly
if(colnames(data)[1] != "genre") {
colnames(data)[1] = "genre"
}
#convert attributes like mode, key and timeSignature for machine learning
levels(data$mode)
levels(data$mode) = c(1,0)
levels(data$mode)
levels(data$key)
levels(data$key) = c(1:12)
levels(data$key)
levels(data$time_signature)
levels(data$time_signature) = c(1:5)
levels(data$time_signature)
#subset only numeric features from the data to run our model
numericFeatures = data[ ,5:ncol(data)]
#convert to numeric
numericFeatures$key = as.numeric(numericFeatures$key)
numericFeatures$mode = as.numeric(numericFeatures$mode)
numericFeatures$time_signature = as.numeric(numericFeatures$time_signature)
numericFeatures = numericFeatures[,-5]
#-------------------------------------------------------------------------------------------------
#load our trained machine learning model for prediction
load("LinearRegressionModel.rda")
#run the app
runApp("Popularity_PredictorExplorer")
#run the app
runApp("Popularity_PredictorExplorer")
#-------------------------------------------------
#  title: Spotify Popularity Predictor and Explorer
#  authors: Adarsh Salapaka, Harsh Tandon, Wenping (Fiona) Du, Xiyu Wu, Xiaoyu Guo
#--------------------------------------------------
#Lets install packages if not already present, and load the following libraries
#install.packages("stargazer")
#install.packages("DT")
#install.packages("shinyWidgets")
#install.packages("ggplot2")
library(ggplot2)
library(shiny)
library(corrplot)
library(tidyverse)
library(stargazer)
library(caret)
library(dplyr)
library(gridExtra)
library(shinyWidgets)
library(DT)
#set working directory
setwd("D:/1st Qtr Study Material/R/Final/HTandon/Spotify/")
#read Dataset
data = read.csv("SpotifyFeatures.csv")
#data cleaning ---------------------------------------------------------------------------------
#timeSignature is in date format, which needs to be in x/4 format
data$time_signature
levels(data$time_signature)
levels(data$time_signature) = c("0/4", "1/4", "3/4", "4/4", "5/4")
data$time_signature
#column name genre reads differently in mac and windows
#the following code changes column Genre to "genre" if it was read incorrectly
if(colnames(data)[1] != "genre") {
colnames(data)[1] = "genre"
}
#convert attributes like mode, key and timeSignature for machine learning
levels(data$mode)
levels(data$mode) = c(1,0)
levels(data$mode)
levels(data$key)
levels(data$key) = c(1:12)
levels(data$key)
levels(data$time_signature)
levels(data$time_signature) = c(1:5)
levels(data$time_signature)
#subset only numeric features from the data to run our model
numericFeatures = data[ ,5:ncol(data)]
#convert to numeric
numericFeatures$key = as.numeric(numericFeatures$key)
numericFeatures$mode = as.numeric(numericFeatures$mode)
numericFeatures$time_signature = as.numeric(numericFeatures$time_signature)
numericFeatures = numericFeatures[,-5]
#-------------------------------------------------------------------------------------------------
#load our trained machine learning model for prediction
load("LinearRegressionModel.rda")
#run the app
runApp("Popularity_PredictorExplorer")
